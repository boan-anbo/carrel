// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file carrel/common/task/v1/task_v1.proto (package carrel.common.task.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {TaskState} from "../../task_state/v1/task_state_v1_pb";

/**
 * / A common tag for carrel system.
 *
 * @generated from message carrel.common.task.v1.Task
 */
export class Task extends Message<Task> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: carrel.common.task_state.v1.TaskState state = 4;
   */
  state = TaskState.UNSPECIFIED;

  /**
   * @generated from field: string deadline = 5;
   */
  deadline = "";

  /**
   * @generated from field: string started_at = 6;
   */
  startedAt = "";

  /**
   * @generated from field: string finished_at = 7;
   */
  finishedAt = "";

  /**
   * @generated from field: string created_at = 8;
   */
  createdAt = "";

  constructor(data?: PartialMessage<Task>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.common.task.v1.Task";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "state", kind: "enum", T: proto3.getEnumType(TaskState) },
    { no: 5, name: "deadline", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "started_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "finished_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task {
    return new Task().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task {
    return new Task().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task {
    return new Task().fromJsonString(jsonString, options);
  }

  static equals(a: Task | PlainMessage<Task> | undefined, b: Task | PlainMessage<Task> | undefined): boolean {
    return proto3.util.equals(Task, a, b);
  }
}

