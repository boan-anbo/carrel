// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file carrel/server/firefly_keeper/v1/firefly_keeper.proto (package carrel.server.firefly_keeper.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {Fireflies} from "../../../firefly_keeper/v1/firefly_keeper_v1_pb.js";

/**
 * @generated from message carrel.server.firefly_keeper.v1.FireFliesResponse
 */
export class FireFliesResponse extends Message<FireFliesResponse> {
  /**
   * @generated from field: carrel.firefly_keeper.v1.Fireflies fireflies = 1;
   */
  fireflies?: Fireflies;

  constructor(data?: PartialMessage<FireFliesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.server.firefly_keeper.v1.FireFliesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fireflies", kind: "message", T: Fireflies },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FireFliesResponse {
    return new FireFliesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FireFliesResponse {
    return new FireFliesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FireFliesResponse {
    return new FireFliesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FireFliesResponse | PlainMessage<FireFliesResponse> | undefined, b: FireFliesResponse | PlainMessage<FireFliesResponse> | undefined): boolean {
    return proto3.util.equals(FireFliesResponse, a, b);
  }
}

