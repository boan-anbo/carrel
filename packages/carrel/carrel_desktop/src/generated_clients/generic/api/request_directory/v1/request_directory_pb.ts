// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file generic/api/request_directory/v1/request_directory.proto (package generic.api.request_directory.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * A generic request with a single directory path.
 *
 * @generated from message generic.api.request_directory.v1.DirectoryRequest
 */
export class DirectoryRequest extends Message<DirectoryRequest> {
  /**
   * @generated from field: string directory_path = 1;
   */
  directoryPath = "";

  /**
   * description of the request.
   *
   * @generated from field: string note = 2;
   */
  note = "";

  constructor(data?: PartialMessage<DirectoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "generic.api.request_directory.v1.DirectoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectoryRequest {
    return new DirectoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectoryRequest {
    return new DirectoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectoryRequest {
    return new DirectoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DirectoryRequest | PlainMessage<DirectoryRequest> | undefined, b: DirectoryRequest | PlainMessage<DirectoryRequest> | undefined): boolean {
    return proto3.util.equals(DirectoryRequest, a, b);
  }
}

