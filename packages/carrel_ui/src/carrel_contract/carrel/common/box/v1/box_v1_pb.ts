// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file carrel/common/box/v1/box_v1.proto (package carrel.common.box.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * / A common tag for carrel system.
 *
 * @generated from message carrel.common.box.v1.Box
 */
export class Box extends Message<Box> {
  /**
   * the numeric id of the box, usually the same as in the database.
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * unique uuid.
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * label, label of the box.
   *
   * @generated from field: string label = 3;
   */
  label = "";

  /**
   * tags in the box.
   *
   * @generated from field: repeated string tag_uuids = 4;
   */
  tagUuids: string[] = [];

  /**
   * the count of tags under the collection;
   *
   * @generated from field: int32 tag_count = 5;
   */
  tagCount = 0;

  /**
   * the boxes under this box;
   *
   * @generated from field: repeated string box_uuids = 6;
   */
  boxUuids: string[] = [];

  /**
   * the count of boxes under the tag;
   *
   * @generated from field: int32 box_count = 7;
   */
  boxCount = 0;

  /**
   * modified at
   *
   * @generated from field: string modified_at = 8;
   */
  modifiedAt = "";

  /**
   * created at
   *
   * @generated from field: string created_at = 9;
   */
  createdAt = "";

  /**
   * last checked for updates at, e.g. the last time all the fireflies under the box are checked.
   *
   * @generated from field: string last_checked_at = 10;
   */
  lastCheckedAt = "";

  /**
   * whether this is a root level box to be retrieved first
   *
   * @generated from field: bool is_root = 11;
   */
  isRoot = false;

  /**
   * the count of all fireles that belong to the tags and boxes of the box.
   *
   * @generated from field: int32 firefly_count = 12;
   */
  fireflyCount = 0;

  /**
   * whether the box should come before other boxes when being displayed.
   *
   * @generated from field: bool is_pinned = 13;
   */
  isPinned = false;

  /**
   * whether the box has an order when being displayed.
   *
   * @generated from field: int32 order = 14;
   */
  order = 0;

  constructor(data?: PartialMessage<Box>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.common.box.v1.Box";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tag_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "tag_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "box_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "box_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "modified_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "last_checked_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "is_root", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "firefly_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "is_pinned", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Box {
    return new Box().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Box {
    return new Box().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Box {
    return new Box().fromJsonString(jsonString, options);
  }

  static equals(a: Box | PlainMessage<Box> | undefined, b: Box | PlainMessage<Box> | undefined): boolean {
    return proto3.util.equals(Box, a, b);
  }
}

