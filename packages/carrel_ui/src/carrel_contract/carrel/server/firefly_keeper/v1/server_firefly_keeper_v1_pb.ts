// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file carrel/server/firefly_keeper/v1/server_firefly_keeper_v1.proto (package carrel.server.firefly_keeper.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {Fireflies} from "../../../firefly_keeper/v1/firefly_keeper_v1_pb.js";

/**
 * @generated from message carrel.server.firefly_keeper.v1.ScanFolderForFirefliesRequest
 */
export class ScanFolderForFirefliesRequest extends Message<ScanFolderForFirefliesRequest> {
  /**
   * @generated from field: string directory = 1;
   */
  directory = "";

  /**
   * @generated from field: bool classified_only = 2;
   */
  classifiedOnly = false;

  /**
   * @generated from field: repeated string ignore_directories = 3;
   */
  ignoreDirectories: string[] = [];

  constructor(data?: PartialMessage<ScanFolderForFirefliesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.server.firefly_keeper.v1.ScanFolderForFirefliesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "classified_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "ignore_directories", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScanFolderForFirefliesRequest {
    return new ScanFolderForFirefliesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScanFolderForFirefliesRequest {
    return new ScanFolderForFirefliesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScanFolderForFirefliesRequest {
    return new ScanFolderForFirefliesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ScanFolderForFirefliesRequest | PlainMessage<ScanFolderForFirefliesRequest> | undefined, b: ScanFolderForFirefliesRequest | PlainMessage<ScanFolderForFirefliesRequest> | undefined): boolean {
    return proto3.util.equals(ScanFolderForFirefliesRequest, a, b);
  }
}

/**
 * @generated from message carrel.server.firefly_keeper.v1.ScanFolderForFirefliesResponse
 */
export class ScanFolderForFirefliesResponse extends Message<ScanFolderForFirefliesResponse> {
  /**
   * @generated from field: carrel.firefly_keeper.v1.Fireflies fireflies = 1;
   */
  fireflies?: Fireflies;

  constructor(data?: PartialMessage<ScanFolderForFirefliesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.server.firefly_keeper.v1.ScanFolderForFirefliesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fireflies", kind: "message", T: Fireflies },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScanFolderForFirefliesResponse {
    return new ScanFolderForFirefliesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScanFolderForFirefliesResponse {
    return new ScanFolderForFirefliesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScanFolderForFirefliesResponse {
    return new ScanFolderForFirefliesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ScanFolderForFirefliesResponse | PlainMessage<ScanFolderForFirefliesResponse> | undefined, b: ScanFolderForFirefliesResponse | PlainMessage<ScanFolderForFirefliesResponse> | undefined): boolean {
    return proto3.util.equals(ScanFolderForFirefliesResponse, a, b);
  }
}

/**
 * @generated from message carrel.server.firefly_keeper.v1.ScanFilesForFirefliesRequest
 */
export class ScanFilesForFirefliesRequest extends Message<ScanFilesForFirefliesRequest> {
  /**
   * @generated from field: repeated string files = 1;
   */
  files: string[] = [];

  /**
   * @generated from field: bool classified_only = 2;
   */
  classifiedOnly = false;

  constructor(data?: PartialMessage<ScanFilesForFirefliesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.server.firefly_keeper.v1.ScanFilesForFirefliesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "files", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "classified_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScanFilesForFirefliesRequest {
    return new ScanFilesForFirefliesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScanFilesForFirefliesRequest {
    return new ScanFilesForFirefliesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScanFilesForFirefliesRequest {
    return new ScanFilesForFirefliesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ScanFilesForFirefliesRequest | PlainMessage<ScanFilesForFirefliesRequest> | undefined, b: ScanFilesForFirefliesRequest | PlainMessage<ScanFilesForFirefliesRequest> | undefined): boolean {
    return proto3.util.equals(ScanFilesForFirefliesRequest, a, b);
  }
}

/**
 * @generated from message carrel.server.firefly_keeper.v1.ScanFilesForFirefliesResponse
 */
export class ScanFilesForFirefliesResponse extends Message<ScanFilesForFirefliesResponse> {
  /**
   * @generated from field: carrel.firefly_keeper.v1.Fireflies fireflies = 1;
   */
  fireflies?: Fireflies;

  constructor(data?: PartialMessage<ScanFilesForFirefliesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.server.firefly_keeper.v1.ScanFilesForFirefliesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fireflies", kind: "message", T: Fireflies },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScanFilesForFirefliesResponse {
    return new ScanFilesForFirefliesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScanFilesForFirefliesResponse {
    return new ScanFilesForFirefliesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScanFilesForFirefliesResponse {
    return new ScanFilesForFirefliesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ScanFilesForFirefliesResponse | PlainMessage<ScanFilesForFirefliesResponse> | undefined, b: ScanFilesForFirefliesResponse | PlainMessage<ScanFilesForFirefliesResponse> | undefined): boolean {
    return proto3.util.equals(ScanFilesForFirefliesResponse, a, b);
  }
}

