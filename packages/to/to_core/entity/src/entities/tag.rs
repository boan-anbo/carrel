//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "tag")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub key: String,
    pub value: Option<String>,
    pub note: Option<String>,
    pub raw_tag_string: String,
    pub uuid: String,
    pub to_id: i32,
    pub to_uuid: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::textual_object::Entity",
        from = "Column::ToId",
        to = "super::textual_object::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TextualObject,
}

impl Related<super::textual_object::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TextualObject.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
