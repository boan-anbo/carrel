//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "textual_object")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub uuid: String,
    pub ticket_id: String,
    pub ticket_minimal: String,
    pub source_id: String,
    pub source_name: String,
    pub source_id_type: String,
    pub source_path: String,
    pub store_info: String,
    pub store_url: String,
    pub created: String,
    pub updated: String,
    pub json: String,
    pub json_type: Option<String>,
    pub json_unique_id: Option<String>,
    pub card: String,
    pub card_map: String,
    pub context: String,
    pub ticket_index_in_context: i32,
    pub tag_count: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::tag::Entity")]
    Tag,
}

impl Related<super::tag::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Tag.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
