// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file carrel/common/archive/v1/archive_v1.proto (package carrel.common.archive.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {Document} from "../../document/v1/document_pb.js";

/**
 * A collection of materials for certain purposes and associated with certain projects.
 *
 * @generated from message carrel.common.archive.v1.Archive
 */
export class Archive extends Message<Archive> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid = "";

  /**
   * the project uuid it is associated with
   *
   * @generated from field: repeated string project_uuids = 2;
   */
  projectUuids: string[] = [];

  /**
   * the name of the archive
   *
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * the description of the archive
   *
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * Documents
   *
   * @generated from field: repeated carrel.common.document.v1.Document documents = 5;
   */
  documents: Document[] = [];

  /**
   * removed items
   *
   * @generated from field: repeated carrel.common.document.v1.Document removed_documents = 6;
   */
  removedDocuments: Document[] = [];

  /**
   * time markers
   *
   * @generated from field: string created_at = 7;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 8;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<Archive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "carrel.common.archive.v1.Archive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "documents", kind: "message", T: Document, repeated: true },
    { no: 6, name: "removed_documents", kind: "message", T: Document, repeated: true },
    { no: 7, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Archive {
    return new Archive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Archive {
    return new Archive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Archive {
    return new Archive().fromJsonString(jsonString, options);
  }

  static equals(a: Archive | PlainMessage<Archive> | undefined, b: Archive | PlainMessage<Archive> | undefined): boolean {
    return proto3.util.equals(Archive, a, b);
  }
}

